{"ast":null,"code":"var _jsxFileName = \"/home/invincix-dell/Desktop/Node/pg-management/client/src/module/user/UserRegister.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.name) {\n    errors.name = 'Required';\n  } else if (values.name.length > 15) {\n    errors.name = 'Must be 15 characters or less';\n  }\n\n  return errors;\n};\n\nconst UserRegister = () => {\n  _s();\n\n  // Pass the useFormik() hook initial form values and a submit function that will\n  // be called when the form is submitted\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      name: ''\n    },\n    validate,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name\",\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"name\",\n      name: \"name\",\n      type: \"text\",\n      onChange: formik.handleChange,\n      value: formik.values.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Email Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      onChange: formik.handleChange,\n      value: formik.values.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserRegister, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = UserRegister;\nexport default UserRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserRegister\");","map":{"version":3,"sources":["/home/invincix-dell/Desktop/Node/pg-management/client/src/module/user/UserRegister.js"],"names":["React","useFormik","validate","values","errors","name","length","UserRegister","formik","initialValues","email","onSubmit","alert","JSON","stringify","handleSubmit","handleChange"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,QAA1B;;;AAEA,MAAMC,QAAQ,GAAGC,MAAM,IAAI;AACvB,QAAMC,MAAM,GAAG,EAAf;;AACA,MAAI,CAACD,MAAM,CAACE,IAAZ,EAAkB;AACdD,IAAAA,MAAM,CAACC,IAAP,GAAc,UAAd;AACH,GAFD,MAGK,IAAIF,MAAM,CAACE,IAAP,CAAYC,MAAZ,GAAqB,EAAzB,EAA6B;AAC9BF,IAAAA,MAAM,CAACC,IAAP,GAAc,+BAAd;AACH;;AAED,SAAOD,MAAP;AACH,CAVD;;AAYA,MAAMG,YAAY,GAAG,MAAM;AAAA;;AACvB;AACA;AACA,QAAMC,MAAM,GAAGP,SAAS,CAAC;AACrBQ,IAAAA,aAAa,EAAE;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXL,MAAAA,IAAI,EAAE;AAFK,KADM;AAKrBH,IAAAA,QALqB;AAMrBS,IAAAA,QAAQ,EAAER,MAAM,IAAI;AAChBS,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeX,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACH;AARoB,GAAD,CAAxB;AAWA,sBACI;AAAM,IAAA,QAAQ,EAAEK,MAAM,CAACO,YAAvB;AAAA,4BACI;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AACI,MAAA,EAAE,EAAC,MADP;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,QAAQ,EAAEP,MAAM,CAACQ,YAJrB;AAKI,MAAA,KAAK,EAAER,MAAM,CAACL,MAAP,CAAcE;AALzB;AAAA;AAAA;AAAA;AAAA,YAFJ,eASI;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,eAWI;AACI,MAAA,EAAE,EAAC,OADP;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,QAAQ,EAAEG,MAAM,CAACQ,YAJrB;AAKI,MAAA,KAAK,EAAER,MAAM,CAACL,MAAP,CAAcO;AALzB;AAAA;AAAA;AAAA;AAAA,YAXJ,eAkBI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CApCD;;GAAMH,Y;UAGaN,S;;;KAHbM,Y;AAsCN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\n\nconst validate = values => {\n    const errors = {}\n    if (!values.name) {\n        errors.name = 'Required';\n    }\n    else if (values.name.length > 15) {\n        errors.name = 'Must be 15 characters or less'\n    }\n\n    return errors;\n}\n\nconst UserRegister = () => {\n    // Pass the useFormik() hook initial form values and a submit function that will\n    // be called when the form is submitted\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            name: '',\n        },\n        validate,\n        onSubmit: values => {\n            alert(JSON.stringify(values, null, 2));\n        },\n    });\n\n    return (\n        <form onSubmit={formik.handleSubmit}>\n            <label htmlFor=\"name\">Name</label>\n            <input\n                id=\"name\"\n                name=\"name\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                value={formik.values.name}\n            />\n            <br />\n            <label htmlFor=\"email\">Email Address</label>\n            <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                onChange={formik.handleChange}\n                value={formik.values.email}\n            />\n            <button type=\"submit\">Submit</button>\n        </form>\n    );\n};\n\nexport default UserRegister"]},"metadata":{},"sourceType":"module"}